$date
	Sun Dec 26 22:24:24 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ICESTORM_LC $end
$var wire 1 ! CEN $end
$var wire 1 " CIN $end
$var wire 1 # CLK $end
$var wire 1 $ COUT $end
$var wire 1 % I0 $end
$var wire 1 & I1 $end
$var wire 1 ' I2 $end
$var wire 1 ( I3 $end
$var wire 1 ) LO $end
$var wire 1 * O $end
$var wire 1 + SR $end
$var wire 1 , polarized_clk $end
$var wire 8 - lut_s3 [7:0] $end
$var wire 4 . lut_s2 [3:0] $end
$var wire 2 / lut_s1 [1:0] $end
$var wire 1 0 lut_o $end
$var reg 1 1 o_reg $end
$upscope $end
$scope module SB_CARRY $end
$var wire 1 2 CI $end
$var wire 1 3 CO $end
$var wire 1 4 I0 $end
$var wire 1 5 I1 $end
$upscope $end
$scope module SB_DFF $end
$var wire 1 6 C $end
$var wire 1 7 D $end
$var reg 1 8 Q $end
$upscope $end
$scope module SB_DFFE $end
$var wire 1 9 C $end
$var wire 1 : D $end
$var wire 1 ; E $end
$var reg 1 < Q $end
$upscope $end
$scope module SB_DFFER $end
$var wire 1 = C $end
$var wire 1 > D $end
$var wire 1 ? E $end
$var wire 1 @ R $end
$var reg 1 A Q $end
$upscope $end
$scope module SB_DFFES $end
$var wire 1 B C $end
$var wire 1 C D $end
$var wire 1 D E $end
$var wire 1 E S $end
$var reg 1 F Q $end
$upscope $end
$scope module SB_DFFESR $end
$var wire 1 G C $end
$var wire 1 H D $end
$var wire 1 I E $end
$var wire 1 J R $end
$var reg 1 K Q $end
$upscope $end
$scope module SB_DFFESS $end
$var wire 1 L C $end
$var wire 1 M D $end
$var wire 1 N E $end
$var wire 1 O S $end
$var reg 1 P Q $end
$upscope $end
$scope module SB_DFFN $end
$var wire 1 Q C $end
$var wire 1 R D $end
$var reg 1 S Q $end
$upscope $end
$scope module SB_DFFNE $end
$var wire 1 T C $end
$var wire 1 U D $end
$var wire 1 V E $end
$var reg 1 W Q $end
$upscope $end
$scope module SB_DFFNER $end
$var wire 1 X C $end
$var wire 1 Y D $end
$var wire 1 Z E $end
$var wire 1 [ R $end
$var reg 1 \ Q $end
$upscope $end
$scope module SB_DFFNES $end
$var wire 1 ] C $end
$var wire 1 ^ D $end
$var wire 1 _ E $end
$var wire 1 ` S $end
$var reg 1 a Q $end
$upscope $end
$scope module SB_DFFNESR $end
$var wire 1 b C $end
$var wire 1 c D $end
$var wire 1 d E $end
$var wire 1 e R $end
$var reg 1 f Q $end
$upscope $end
$scope module SB_DFFNESS $end
$var wire 1 g C $end
$var wire 1 h D $end
$var wire 1 i E $end
$var wire 1 j S $end
$var reg 1 k Q $end
$upscope $end
$scope module SB_DFFNR $end
$var wire 1 l C $end
$var wire 1 m D $end
$var wire 1 n R $end
$var reg 1 o Q $end
$upscope $end
$scope module SB_DFFNS $end
$var wire 1 p C $end
$var wire 1 q D $end
$var wire 1 r S $end
$var reg 1 s Q $end
$upscope $end
$scope module SB_DFFNSR $end
$var wire 1 t C $end
$var wire 1 u D $end
$var wire 1 v R $end
$var reg 1 w Q $end
$upscope $end
$scope module SB_DFFNSS $end
$var wire 1 x C $end
$var wire 1 y D $end
$var wire 1 z S $end
$var reg 1 { Q $end
$upscope $end
$scope module SB_DFFR $end
$var wire 1 | C $end
$var wire 1 } D $end
$var wire 1 ~ R $end
$var reg 1 !" Q $end
$upscope $end
$scope module SB_DFFS $end
$var wire 1 "" C $end
$var wire 1 #" D $end
$var wire 1 $" S $end
$var reg 1 %" Q $end
$upscope $end
$scope module SB_DFFSR $end
$var wire 1 &" C $end
$var wire 1 '" D $end
$var wire 1 (" R $end
$var reg 1 )" Q $end
$upscope $end
$scope module SB_DFFSS $end
$var wire 1 *" C $end
$var wire 1 +" D $end
$var wire 1 ," S $end
$var reg 1 -" Q $end
$upscope $end
$scope module SB_GB $end
$var wire 1 ." GLOBAL_BUFFER_OUTPUT $end
$var wire 1 /" USER_SIGNAL_TO_GLOBAL_BUFFER $end
$upscope $end
$scope module SB_GB_IO $end
$var wire 1 0" CLOCK_ENABLE $end
$var wire 1 1" D_OUT_0 $end
$var wire 1 2" D_OUT_1 $end
$var wire 1 3" GLOBAL_BUFFER_OUTPUT $end
$var wire 1 4" INPUT_CLK $end
$var wire 1 5" LATCH_INPUT_VALUE $end
$var wire 1 6" OUTPUT_CLK $end
$var wire 1 7" OUTPUT_ENABLE $end
$var wire 1 8" PACKAGE_PIN $end
$var wire 1 9" D_IN_1 $end
$var wire 1 :" D_IN_0 $end
$scope module IO $end
$var wire 1 0" CLOCK_ENABLE $end
$var wire 1 :" D_IN_0 $end
$var wire 1 9" D_IN_1 $end
$var wire 1 1" D_OUT_0 $end
$var wire 1 2" D_OUT_1 $end
$var wire 1 4" INPUT_CLK $end
$var wire 1 5" LATCH_INPUT_VALUE $end
$var wire 1 6" OUTPUT_CLK $end
$var wire 1 7" OUTPUT_ENABLE $end
$var wire 1 8" PACKAGE_PIN $end
$var reg 1 ;" din_0 $end
$var reg 1 <" din_1 $end
$var reg 1 =" din_q_0 $end
$var reg 1 >" din_q_1 $end
$var reg 1 ?" dout $end
$var reg 1 @" dout_q_0 $end
$var reg 1 A" dout_q_1 $end
$var reg 1 B" outclk_delayed_1 $end
$var reg 1 C" outclk_delayed_2 $end
$var reg 1 D" outena_q $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module SB_LUT4 $end
$var wire 1 E" I0 $end
$var wire 1 F" I1 $end
$var wire 1 G" I2 $end
$var wire 1 H" I3 $end
$var wire 8 I" s3 [7:0] $end
$var wire 4 J" s2 [3:0] $end
$var wire 2 K" s1 [1:0] $end
$var wire 1 L" O $end
$upscope $end
$scope module SB_PLL40_2F_CORE $end
$var wire 1 M" BYPASS $end
$var wire 8 N" DYNAMICDELAY [7:0] $end
$var wire 1 O" EXTFEEDBACK $end
$var wire 1 P" LATCHINPUTVALUE $end
$var wire 1 Q" LOCK $end
$var wire 1 R" PLLOUTCOREA $end
$var wire 1 S" PLLOUTCOREB $end
$var wire 1 T" PLLOUTGLOBALA $end
$var wire 1 U" PLLOUTGLOBALB $end
$var wire 1 V" REFERENCECLK $end
$var wire 1 W" RESETB $end
$var wire 1 X" SCLK $end
$var wire 1 Y" SDI $end
$var wire 1 Z" SDO $end
$upscope $end
$scope module SB_PLL40_2F_PAD $end
$var wire 1 [" BYPASS $end
$var wire 8 \" DYNAMICDELAY [7:0] $end
$var wire 1 ]" EXTFEEDBACK $end
$var wire 1 ^" LATCHINPUTVALUE $end
$var wire 1 _" LOCK $end
$var wire 1 `" PACKAGEPIN $end
$var wire 1 a" PLLOUTCOREA $end
$var wire 1 b" PLLOUTCOREB $end
$var wire 1 c" PLLOUTGLOBALA $end
$var wire 1 d" PLLOUTGLOBALB $end
$var wire 1 e" RESETB $end
$var wire 1 f" SCLK $end
$var wire 1 g" SDI $end
$var wire 1 h" SDO $end
$upscope $end
$scope module SB_PLL40_2_PAD $end
$var wire 1 i" BYPASS $end
$var wire 8 j" DYNAMICDELAY [7:0] $end
$var wire 1 k" EXTFEEDBACK $end
$var wire 1 l" LATCHINPUTVALUE $end
$var wire 1 m" LOCK $end
$var wire 1 n" PACKAGEPIN $end
$var wire 1 o" PLLOUTCOREA $end
$var wire 1 p" PLLOUTCOREB $end
$var wire 1 q" PLLOUTGLOBALA $end
$var wire 1 r" PLLOUTGLOBALB $end
$var wire 1 s" RESETB $end
$var wire 1 t" SCLK $end
$var wire 1 u" SDI $end
$var wire 1 v" SDO $end
$upscope $end
$scope module SB_PLL40_CORE $end
$var wire 1 w" BYPASS $end
$var wire 8 x" DYNAMICDELAY [7:0] $end
$var wire 1 y" EXTFEEDBACK $end
$var wire 1 z" LATCHINPUTVALUE $end
$var wire 1 {" LOCK $end
$var wire 1 |" PLLOUTCORE $end
$var wire 1 }" PLLOUTGLOBAL $end
$var wire 1 ~" REFERENCECLK $end
$var wire 1 !# RESETB $end
$var wire 1 "# SCLK $end
$var wire 1 ## SDI $end
$var wire 1 $# SDO $end
$upscope $end
$scope module SB_PLL40_PAD $end
$var wire 1 %# BYPASS $end
$var wire 8 &# DYNAMICDELAY [7:0] $end
$var wire 1 '# EXTFEEDBACK $end
$var wire 1 (# LATCHINPUTVALUE $end
$var wire 1 )# LOCK $end
$var wire 1 *# PACKAGEPIN $end
$var wire 1 +# PLLOUTCORE $end
$var wire 1 ,# PLLOUTGLOBAL $end
$var wire 1 -# RESETB $end
$var wire 1 .# SCLK $end
$var wire 1 /# SDI $end
$var wire 1 0# SDO $end
$upscope $end
$scope module SB_RAM40_4KNR $end
$var wire 16 1# MASK [15:0] $end
$var wire 11 2# RADDR [10:0] $end
$var wire 1 3# RCLKE $end
$var wire 1 4# RCLKN $end
$var wire 1 5# RE $end
$var wire 11 6# WADDR [10:0] $end
$var wire 1 7# WCLK $end
$var wire 1 8# WCLKE $end
$var wire 16 9# WDATA [15:0] $end
$var wire 1 :# WE $end
$var wire 16 ;# RDATA [15:0] $end
$scope module RAM $end
$var wire 16 <# MASK [15:0] $end
$var wire 11 =# RADDR [10:0] $end
$var wire 1 ># RCLK $end
$var wire 1 3# RCLKE $end
$var wire 1 5# RE $end
$var wire 16 ?# RMASK_I [15:0] $end
$var wire 11 @# WADDR [10:0] $end
$var wire 1 7# WCLK $end
$var wire 1 8# WCLKE $end
$var wire 16 A# WDATA [15:0] $end
$var wire 1 :# WE $end
$var wire 16 B# WMASK_I [15:0] $end
$var wire 16 C# WDATA_I [15:0] $end
$var wire 16 D# RDATA [15:0] $end
$var reg 16 E# RDATA_I [15:0] $end
$var integer 32 F# i [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module SB_RAM40_4KNRNW $end
$var wire 16 G# MASK [15:0] $end
$var wire 11 H# RADDR [10:0] $end
$var wire 1 I# RCLKE $end
$var wire 1 J# RCLKN $end
$var wire 1 K# RE $end
$var wire 11 L# WADDR [10:0] $end
$var wire 1 M# WCLKE $end
$var wire 1 N# WCLKN $end
$var wire 16 O# WDATA [15:0] $end
$var wire 1 P# WE $end
$var wire 16 Q# RDATA [15:0] $end
$scope module RAM $end
$var wire 16 R# MASK [15:0] $end
$var wire 11 S# RADDR [10:0] $end
$var wire 1 T# RCLK $end
$var wire 1 I# RCLKE $end
$var wire 1 K# RE $end
$var wire 16 U# RMASK_I [15:0] $end
$var wire 11 V# WADDR [10:0] $end
$var wire 1 W# WCLK $end
$var wire 1 M# WCLKE $end
$var wire 16 X# WDATA [15:0] $end
$var wire 1 P# WE $end
$var wire 16 Y# WMASK_I [15:0] $end
$var wire 16 Z# WDATA_I [15:0] $end
$var wire 16 [# RDATA [15:0] $end
$var reg 16 \# RDATA_I [15:0] $end
$var integer 32 ]# i [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module SB_RAM40_4KNW $end
$var wire 16 ^# MASK [15:0] $end
$var wire 11 _# RADDR [10:0] $end
$var wire 1 `# RCLK $end
$var wire 1 a# RCLKE $end
$var wire 1 b# RE $end
$var wire 11 c# WADDR [10:0] $end
$var wire 1 d# WCLKE $end
$var wire 1 e# WCLKN $end
$var wire 16 f# WDATA [15:0] $end
$var wire 1 g# WE $end
$var wire 16 h# RDATA [15:0] $end
$scope module RAM $end
$var wire 16 i# MASK [15:0] $end
$var wire 11 j# RADDR [10:0] $end
$var wire 1 `# RCLK $end
$var wire 1 a# RCLKE $end
$var wire 1 b# RE $end
$var wire 16 k# RMASK_I [15:0] $end
$var wire 11 l# WADDR [10:0] $end
$var wire 1 m# WCLK $end
$var wire 1 d# WCLKE $end
$var wire 16 n# WDATA [15:0] $end
$var wire 1 g# WE $end
$var wire 16 o# WMASK_I [15:0] $end
$var wire 16 p# WDATA_I [15:0] $end
$var wire 16 q# RDATA [15:0] $end
$var reg 16 r# RDATA_I [15:0] $end
$var integer 32 s# i [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module SB_WARMBOOT $end
$var wire 1 t# BOOT $end
$var wire 1 u# S0 $end
$var wire 1 v# S1 $end
$upscope $end
$scope module _4bit_tb $end
$var wire 4 w# ir [3:0] $end
$var wire 4 x# iex [3:0] $end
$var wire 1 y# id $end
$var reg 1 z# clk $end
$var reg 4 {# next [3:0] $end
$scope module dut $end
$var wire 1 z# clk $end
$var wire 4 |# next [3:0] $end
$var reg 1 y# id $end
$var reg 4 }# iex [3:0] $end
$var reg 4 ~# ir [3:0] $end
$var reg 2 !$ state_reg [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !$
b0 ~#
b0 }#
b0 |#
b0 {#
0z#
0y#
b0 x#
b0 w#
zv#
zu#
zt#
b10000 s#
bx r#
bx q#
bz p#
bz o#
bz n#
zm#
bz l#
b0 k#
bz j#
bz i#
bx h#
zg#
bz f#
ze#
zd#
bz c#
zb#
za#
z`#
bz _#
bz ^#
b10000 ]#
bx \#
bx [#
bz Z#
bz Y#
bz X#
zW#
bz V#
b0 U#
zT#
bz S#
bz R#
bx Q#
zP#
bz O#
zN#
zM#
bz L#
zK#
zJ#
zI#
bz H#
bz G#
b10000 F#
bx E#
bx D#
bz C#
bz B#
bz A#
bz @#
b0 ?#
z>#
bz =#
bz <#
bx ;#
z:#
bz 9#
z8#
z7#
bz 6#
z5#
z4#
z3#
bz 2#
bz 1#
z0#
z/#
z.#
z-#
z,#
z+#
z*#
z)#
z(#
z'#
bz &#
z%#
z$#
z##
z"#
z!#
z~"
z}"
z|"
z{"
zz"
zy"
bz x"
zw"
zv"
zu"
zt"
zs"
zr"
zq"
zp"
zo"
zn"
zm"
zl"
zk"
bz j"
zi"
zh"
zg"
zf"
ze"
zd"
zc"
zb"
za"
z`"
z_"
z^"
z]"
bz \"
z["
zZ"
zY"
zX"
zW"
zV"
zU"
zT"
zS"
zR"
zQ"
zP"
zO"
bz N"
zM"
0L"
b0 K"
b0 J"
b0 I"
zH"
zG"
zF"
zE"
xD"
zC"
zB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
z8"
z7"
z6"
z5"
z4"
z3"
z2"
z1"
z0"
z/"
z."
0-"
z,"
z+"
z*"
0)"
z("
z'"
z&"
0%"
z$"
z#"
z""
0!"
z~
z}
z|
0{
zz
zy
zx
0w
zv
zu
zt
0s
zr
zq
zp
0o
zn
zm
zl
0k
zj
zi
zh
zg
0f
ze
zd
zc
zb
0a
z`
z_
z^
z]
0\
z[
zZ
zY
zX
0W
zV
zU
zT
0S
zR
zQ
0P
zO
zN
zM
zL
0K
zJ
zI
zH
zG
0F
zE
zD
zC
zB
0A
z@
z?
z>
z=
0<
z;
z:
z9
08
z7
z6
z5
z4
x3
z2
x1
00
b0 /
b0 .
b0 -
x,
z+
0*
0)
z(
z'
z&
z%
x$
z#
z"
z!
$end
#5
b1 !$
1z#
#10
0z#
#15
b10 !$
1z#
#20
0z#
#25
b11 !$
b100 x#
b100 }#
1z#
#30
0z#
#35
b0 !$
1z#
#40
0z#
b1110 {#
b1110 |#
#45
b1 !$
b1110 w#
b1110 ~#
1z#
#50
0z#
#55
b10 !$
1y#
1z#
#60
0z#
#65
b11 !$
b1 x#
b1 }#
1z#
#70
0z#
#75
b0 !$
1z#
#80
0z#
b1100 {#
b1100 |#
#85
b1 !$
b1100 w#
b1100 ~#
1z#
#90
0z#
#95
b10 !$
1z#
#100
0z#
#105
b11 !$
b0 x#
b0 }#
1z#
#110
0z#
#115
b0 !$
1z#
#120
0z#
b1010 {#
b1010 |#
#125
b1 !$
b1010 w#
b1010 ~#
1z#
#130
0z#
#135
b10 !$
1z#
#140
0z#
#145
b11 !$
b1100 x#
b1100 }#
1z#
#150
0z#
#155
b0 !$
1z#
#160
0z#
b110 {#
b110 |#
#165
b1 !$
b110 w#
b110 ~#
1z#
#170
0z#
#175
b10 !$
0y#
1z#
#180
0z#
#185
b11 !$
1z#
#190
0z#
#195
b0 !$
1z#
#200
0z#
b10 {#
b10 |#
#205
b1 !$
b10 w#
b10 ~#
1z#
#210
0z#
#215
b10 !$
1z#
#220
0z#
#225
b11 !$
b1000 x#
b1000 }#
1z#
#230
0z#
#235
b0 !$
1z#
#240
0z#
b0 {#
b0 |#
#245
b1 !$
b0 w#
b0 ~#
1z#
#250
0z#
#255
b10 !$
1z#
#260
0z#
#265
b11 !$
b0 x#
b0 }#
1z#
#270
0z#
#275
b0 !$
1z#
#280
